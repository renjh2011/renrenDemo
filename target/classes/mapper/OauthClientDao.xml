<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.oauth.ClientDao">
	<select id="queryObject" resultType="io.renren.entity.oauth.Client" >
		select * from schedule_job where job_id = #{value}
	</select> 

	<select id="queryList" resultType="io.renren.entity.oauth.Client" >
		select * from schedule_job
		<where>
			<if test="beanName != null and beanName.trim() != ''">
				bean_name like concat('%', #{beanName}, '%') 
			</if>
		</where>
		<if test="offset != null and limit != null ">
		limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(1) from schedule_job 
		<where>
			<if test="beanName != null and beanName.trim() != ''">
				bean_name like concat('%', #{beanName}, '%') 
			</if>
		</where>
	</select>

	<insert id="save" parameterType="io.renren.entity.oauth.Client" useGeneratedKeys="true" keyProperty="id">
		insert into schedule_job
		(
			`bean_name`, 
			`method_name`, 
			`params`, 
			`cron_expression`, 
			`status`, 
			`remark`, 
			`create_time`
		)
		values
		(
			#{beanName}, 
			#{methodName}, 
			#{params}, 
			#{cronExpression}, 
			#{status}, 
			#{remark}, 
			#{createTime}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.entity.oauth.Client">
		update schedule_job 
		<set> 
			<if test="beanName != null">`bean_name` = #{beanName}, </if>
			<if test="methodName != null">`method_name` = #{methodName}, </if>
			<if test="params != null">`params` = #{params}, </if>
			<if test="cronExpression != null">`cron_expression` = #{cronExpression}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
		</set>
		where job_id = #{jobId}
	</update>
	

	<delete id="deleteBatch">
		delete from schedule_job where job_id in 
		<foreach item="jobId" collection="array" open="(" separator="," close=")">
			#{jobId}
		</foreach>
	</delete>

	<select id="findOne" resultType="io.renren.entity.oauth.Client">
		select * from OAUTH_CLIENT where id=#{id}
	</select>
	<select id="findByClientId" resultType="io.renren.entity.oauth.Client">
		select * from OAUTH_CLIENT where client_id=#{clientId}
	</select>
	<select id="findByClientSecret" resultType="io.renren.entity.oauth.Client">
		select * from OAUTH_CLIENT where client_secret=#{clientSecret}
	</select>
</mapper>